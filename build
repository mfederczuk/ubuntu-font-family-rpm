#!/bin/sh
# -*- sh -*-
# vim: syntax=sh
# code: language=shellscript

# Copyright (c) 2024 Michael Federczuk
# SPDX-License-Identifier: MPL-2.0 AND Apache-2.0

#region preamble

case "$-" in
	(*'i'*)
		\command printf 'script was called interactively\n' >&2
		return 124
		;;
esac

set -o errexit
set -o nounset

# enabling POSIX-compliant behavior for GNU programs
export POSIXLY_CORRECT=yes POSIX_ME_HARDER=yes

if [ "${0#/}" = "$0" ]; then
	argv0="$0"
else
	argv0="$(basename -- "$0" && printf x)"
	argv0="${argv0%"$(printf '\nx')"}"
fi
readonly argv0

#endregion

if [ $# -gt 0 ]; then
	printf '%s: too many arguments: %d\n' "$argv0" $# >&2
	exit 4
fi

for program_name in rpmlint rpmdev-setuptree rpmbuild; do
	if ! command -v $program_name > '/dev/null'; then
		printf '%s: %s: program missing\n' "$argv0" "$program_name" >&2
		exit 27
	fi
done

root_dir_pathname="$(dirname -- "$0" && printf x)"
root_dir_pathname="${root_dir_pathname%"$(printf '\nx')"}"
readonly root_dir_pathname

rpmlint "$root_dir_pathname/ubuntu-fonts.spec"

#region build directory setup

build_dir_pathname="$root_dir_pathname/_build"
readonly build_dir_pathname

remove_build_dir() {
	rm -rf -- "$build_dir_pathname"
}

trap remove_build_dir EXIT
trap 'trap - EXIT; remove_build_dir' INT QUIT TERM

#endregion

#region new home directory pathname variable setup

is_absolute_pathname() {
	test "${1#/}" != "$1"
}

new_home_dir_pathname="$build_dir_pathname"

if ! is_absolute_pathname "$new_home_dir_pathname"; then
	cwd="$(pwd -L && printf x)"
	cwd="${cwd%"$(printf '\nx')"}"

	new_home_dir_pathname="$cwd/$new_home_dir_pathname"

	unset -v cwd
fi

readonly new_home_dir_pathname

#endregion

#region main

mkdir -p -- "$build_dir_pathname"

HOME="$new_home_dir_pathname" rpmdev-setuptree
HOME="$new_home_dir_pathname" rpmbuild --undefine=_disable_source_fetch -bb "$root_dir_pathname/ubuntu-fonts.spec"

cp -- "$build_dir_pathname/rpmbuild/RPMS/noarch/ubuntu-fonts-"*-*'.noarch.rpm' "$root_dir_pathname/"

#endregion
